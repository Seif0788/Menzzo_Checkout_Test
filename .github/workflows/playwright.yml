name: Playwright Tests with Allure

on:
  push:
    branches: [ main, develop, Fix_playwright_github_actions ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 * * * *" # hourly

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # --- PRE-CLEANUP ---
      - name: Free up disk space before running
        run: |
          echo "Initial disk usage:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo apt-get clean
          echo "Disk usage after cleanup:"
          df -h

      # --- NORMAL JOB FLOW ---
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests with Allure reporter
        run: |
          npx playwright test --reporter=line,allure-playwright --verbose

      - name: Generate Allure report
        run: |
          npx allure generate ./allure-results --clean -o ./allure-report
          
      - name: Fix viewport meta in Allure report
        run: |
          echo "Injecting viewport meta tag into Allure report..."
          find ./allure-report -name "index.html" -exec sed -i 's|<meta charset="utf-8">|<meta charset="utf-8">\n<meta name="viewport" content="width=device-width, initial-scale=1.0">|' {} \;

      - name: Upload Allure report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          retention-days: 5 # keep it light

      # --- POST-CLEANUP ---
      - name: Cleanup workspace
        if: always()
        run: |
          echo "Cleaning up workspace..."
          rm -rf node_modules
          rm -rf allure-results allure-report
          du -h --max-depth=1 . | sort -hr
          echo "Disk usage after cleanup:"
          df -h

  deploy:
    needs: test
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Free up disk space before deployment
        run: |
          echo "Initial disk usage:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/lib/android
          sudo apt-get clean
          echo "Disk usage after cleanup:"
          df -h

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Prepare main branch
        run: |
          echo "Preparing main branch..."
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          rm -rf main
          git clone --depth=1 --branch main https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} main
          cd main
          echo "Existing report folders:"
          ls -1 || true
          # Keep only the 10 most recent allure runs to save space
          ls -1tr allure-run-* 2>/dev/null | head -n -10 | xargs -r rm -rf
          cd ..
        shell: bash

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.9.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: allure-run-${{ github.run_number }}
          keep_files: false  # üßπ Delete everything before new deploy to prevent disk overflow

      - name: Show disk usage after deploy
        run: df -h

  notify-success:
    needs: [test, deploy]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Send success email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: seif.t.axelites@gmail.com
          password: ${{ secrets.Menzzo_Checkout }}
          subject: "‚úÖ Playwright Tests Passed - Run #${{ github.run_number }}"
          to: seif.t.axelites@gmail.com
          from: "GitHub Actions <seif.t.axelites@gmail.com>"
          body: |
            üéâ All Playwright tests passed!

            Workflow: **${{ github.workflow }}**
            Run #: **${{ github.run_number }}**

            üîó Allure Report: 
            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-run-${{ github.run_number }}/

            üîó Full run details: 
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  notify-failure:
    needs: [test, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send failure email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: seif.t.axelites@gmail.com
          password: ${{ secrets.Menzzo_Checkout }}
          subject: "‚ùå Playwright Tests Failed - Run #${{ github.run_number }}"
          to: seif.t.axelites@gmail.com
          from: "GitHub Actions <seif.t.axelites@gmail.com>"
          body: |
            ‚ö†Ô∏è Some tests failed!

            Workflow: **${{ github.workflow }}**
            Run #: **${{ github.run_number }}**

            üîó Allure Report (latest available):
            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-run-${{ github.run_number }}/

            üîó Full run details: 
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
